{
  "paths": {
    "/didManagerGetProviders": {
      "post": {
        "operationId": "didManagerGetProviders",
        "description": "Retrieves a list of all available DID (Decentralized Identifier) providers supported by the system. These providers can be used for creating and managing decentralized identifiers.",
        "requestBody": {
          "content": { "application/json": { "schema": { "type": "object" } } }
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of available DID providers",
            "content": {
              "application/json; charset=utf-8": {
                "schema": { "type": "array", "items": { "type": "string" } }
              }
            }
          },
          "400": {
            "$ref": "./components/schemas.json#/components/schemas/ValidationError"
          }
        }
      }
    },
    "/didManagerFind": {
      "post": {
        "operationId": "didManagerFind",
        "description": "Searches and retrieves a list of managed identifiers based on specified criteria. Supports filtering by provider, alias, and other attributes to help locate specific identifiers in the system.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components/schemas.json#/components/schemas/IDIDManagerFindArgs"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of matching identifiers",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./components/schemas.json#/components/schemas/IIdentifier"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "./components/schemas.json#/components/schemas/ValidationError"
          }
        }
      }
    },
    "/didManagerGet": {
      "post": {
        "operationId": "didManagerGet",
        "description": "Retrieves detailed information about a specific identifier using its DID. Returns the complete identifier object including associated keys and services.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components/schemas.json#/components/schemas/IDIDManagerGetArgs"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the identifier details",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "./components/schemas.json#/components/schemas/IIdentifier"
                }
              }
            }
          },
          "400": {
            "$ref": "./components/schemas.json#/components/schemas/ValidationError"
          }
        }
      }
    },
    "/didManagerCreate": {
      "post": {
        "operationId": "didManagerCreate",
        "description": "Creates a new decentralized identifier (DID) using the specified provider and options. Returns the newly created identifier with its associated keys and services.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components/schemas.json#/components/schemas/IDIDManagerCreateArgs"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully created a new identifier",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "./components/schemas.json#/components/schemas/IIdentifier"
                }
              }
            }
          },
          "400": {
            "$ref": "./components/schemas.json#/components/schemas/ValidationError"
          }
        }
      }
    },
    "/didManagerDelete": {
      "post": {
        "operationId": "didManagerDelete",
        "description": "Removes a managed identifier from the system. This operation may not delete the DID from its respective registry, but rather removes it from local management.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components/schemas.json#/components/schemas/IDIDManagerDeleteArgs"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully deleted the identifier from local management",
            "content": {
              "application/json; charset=utf-8": {
                "schema": { "type": "boolean" }
              }
            }
          },
          "400": {
            "$ref": "./components/schemas.json#/components/schemas/ValidationError"
          }
        }
      }
    },
    "/dataStoreGetVerifiableCredential": {
      "post": {
        "operationId": "dataStoreGetVerifiableCredential",
        "description": "Retrieves a specific verifiable credential from the data store using its unique hash. Returns the complete credential including its proof.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components/schemas.json#/components/schemas/IDataStoreGetVerifiableCredentialArgs"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the verifiable credential",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "./components/schemas.json#/components/schemas/VerifiableCredential"
                }
              }
            }
          },
          "400": {
            "$ref": "./components/schemas.json#/components/schemas/ValidationError"
          }
        }
      }
    },
    "/dataStoreORMGetIdentifiersCount": {
      "post": {
        "operationId": "dataStoreORMGetIdentifiersCount",
        "description": "Returns the total count of identifiers in the system that match the specified filter criteria. Useful for pagination and statistics.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components/schemas.json#/components/schemas/FindIdentifiersArgs"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the count of matching identifiers",
            "content": {
              "application/json; charset=utf-8": {
                "schema": { "type": "number" }
              }
            }
          },
          "400": {
            "$ref": "./components/schemas.json#/components/schemas/ValidationError"
          }
        }
      }
    },
    "/dataStoreORMGetVerifiableCredentials": {
      "post": {
        "operationId": "dataStoreORMGetVerifiableCredentials",
        "description": "Retrieves a list of verifiable credentials from the data store based on specified search criteria. Supports filtering and pagination options.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components/schemas.json#/components/schemas/FindCredentialsArgs"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of verifiable credentials",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./components/schemas.json#/components/schemas/UniqueVerifiableCredential"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "./components/schemas.json#/components/schemas/ValidationError"
          }
        }
      }
    },
    "/dataStoreORMGetVerifiableCredentialsCount": {
      "post": {
        "operationId": "dataStoreORMGetVerifiableCredentialsCount",
        "description": "Returns the total count of verifiable credentials in the system that match the specified filter criteria. Useful for pagination and statistics.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components/schemas.json#/components/schemas/FindCredentialsArgs"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the count of matching verifiable credentials",
            "content": {
              "application/json; charset=utf-8": {
                "schema": { "type": "number" }
              }
            }
          },
          "400": {
            "$ref": "./components/schemas.json#/components/schemas/ValidationError"
          }
        }
      }
    },
    "/renderCredential": {
      "post": {
        "operationId": "renderCredential",
        "description": "Generates a human-readable or formatted representation of a verifiable credential. Useful for displaying credentials in user interfaces.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components/schemas.json#/components/schemas/IRenderCredentialArgs"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully rendered the credential",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "./components/schemas.json#/components/schemas/IRenderResult"
                }
              }
            }
          },
          "400": {
            "$ref": "./components/schemas.json#/components/schemas/ValidationError"
          }
        }
      }
    },
    "/fetchEncryptedDataByCredentialHash": {
      "post": {
        "operationId": "fetchEncryptedDataByCredentialHash",
        "description": "Retrieves encrypted data associated with a specific credential using its hash. Returns both the encrypted data and the necessary decryption information.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components/schemas.json#/components/schemas/IFetchEncryptedDataByCredentialHashArgs"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the encrypted data",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "./components/schemas.json#/components/schemas/IFetchEncryptedDataByCredentialHashResult"
                }
              }
            }
          },
          "400": {
            "$ref": "./components/schemas.json#/components/schemas/ValidationError"
          }
        }
      }
    },
    "/issueRevocationStatusList": {
      "post": {
        "operationId": "issueRevocationStatusList",
        "description": "Creates and issues a new revocation status list for verifiable credentials. This list can be used to track and verify the revocation status of credentials.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components/schemas.json#/components/schemas/IRevocationListDataArgs"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully created the revocation status list",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "./components/schemas.json#/components/schemas/IRevocationStatus"
                }
              }
            }
          },
          "400": {
            "$ref": "./components/schemas.json#/components/schemas/ValidationError"
          }
        }
      }
    },
    "/revokeCredential": {
      "post": {
        "operationId": "revokeCredential",
        "description": "Marks a specific verifiable credential as revoked in the system. This affects the credential's validity status.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components/schemas.json#/components/schemas/IHashCredentialArgs"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully revoked the credential",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "./components/schemas.json#/components/schemas/CredentialStatus"
                }
              }
            }
          },
          "400": {
            "$ref": "./components/schemas.json#/components/schemas/ValidationError"
          }
        }
      }
    },
    "/activateCredential": {
      "post": {
        "operationId": "activateCredential",
        "description": "Activates a previously revoked or suspended verifiable credential, making it valid again in the system.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components/schemas.json#/components/schemas/IHashCredentialArgs"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully activated the credential",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "./components/schemas.json#/components/schemas/CredentialStatus"
                }
              }
            }
          },
          "400": {
            "$ref": "./components/schemas.json#/components/schemas/ValidationError"
          }
        }
      }
    },
    "/checkRevocationStatus": {
      "post": {
        "operationId": "checkRevocationStatus",
        "description": "Checks whether a specific verifiable credential has been revoked. Returns the current status of the credential.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components/schemas.json#/components/schemas/IHashCredentialArgs"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the credential's revocation status",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "./components/schemas.json#/components/schemas/CredentialStatus"
                }
              }
            }
          },
          "400": {
            "$ref": "./components/schemas.json#/components/schemas/ValidationError"
          }
        }
      }
    },
    "/routeCreationVerifiableCredential": {
      "post": {
        "operationId": "routeCreationVerifiableCredential",
        "description": "Creates a new verifiable credential with specified payload, signer, and format. Supports various credential formats and signing methods.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components/schemas.json#/components/schemas/ICreateVerifiableCredentialArgs"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully created the verifiable credential",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "./components/schemas.json#/components/schemas/VerifiableCredential"
                }
              }
            }
          },
          "400": {
            "$ref": "./components/schemas.json#/components/schemas/ValidationError"
          }
        }
      }
    },
    "/routeVerificationCredential": {
      "post": {
        "operationId": "routeVerificationCredential",
        "description": "Verifies a verifiable credential's authenticity and validity. Supports multiple formats including JWT, LDS, EIP712, and OA.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components/schemas.json#/components/schemas/IVerifyCredentialArgs"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully verified the credential",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "./components/schemas.json#/components/schemas/IVerifyResult"
                }
              }
            }
          },
          "400": {
            "$ref": "./components/schemas.json#/components/schemas/ValidationError"
          }
        }
      }
    },
    "/issueBitstringStatusList": {
      "post": {
        "operationId": "issueBitstringStatusList",
        "description": "Creates and issues a new bitstring-based status list for verifiable credentials, providing an efficient way to track credential statuses.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components/schemas.json#/components/schemas/IIssueBitstringStatusListArgs"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully created the bitstring status list",
            "content": {
              "application/json; charset=utf-8": {
                "schema": { "type": "object" }
              }
            }
          },
          "400": {
            "$ref": "./components/schemas.json#/components/schemas/ValidationError"
          }
        }
      }
    },
    "/checkBitstringStatus": {
      "post": {
        "operationId": "checkBitstringStatus",
        "description": "Checks the status of a credential using the bitstring-based status list system. Returns the current status of the specified credential.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components/schemas.json#/components/schemas/ICheckBitstringStatusArgs"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the credential's bitstring status",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "./components/schemas.json#/components/schemas/CredentialStatus"
                }
              }
            }
          },
          "400": {
            "$ref": "./components/schemas.json#/components/schemas/ValidationError"
          }
        }
      }
    },
    "/setBitstringStatus": {
      "post": {
        "operationId": "setBitstringStatus",
        "description": "Updates the status of a credential in the bitstring-based status list. Allows for efficient status updates in the credential system.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components/schemas.json#/components/schemas/ISetBitstringStatusArgs"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated the credential's bitstring status",
            "content": {
              "application/json; charset=utf-8": {
                "schema": { "type": "object" }
              }
            }
          },
          "400": {
            "$ref": "./components/schemas.json#/components/schemas/ValidationError"
          }
        }
      }
    },
    "/computeHash": {
      "post": {
        "operationId": "computeHash",
        "description": "Calculates a cryptographic hash of the provided input data. Used for generating unique identifiers and verification purposes.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components/schemas.json#/components/schemas/IToolsComputeHashArgs"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully computed the hash",
            "content": {
              "application/json; charset=utf-8": {
                "schema": { "type": "string" }
              }
            }
          },
          "400": {
            "$ref": "./components/schemas.json#/components/schemas/ValidationError"
          }
        }
      }
    }
  }
}
