"use strict";(self.webpackChunkvckit_documentation=self.webpackChunkvckit_documentation||[]).push([[7461],{2056:(e,n,t)=>{t.d(n,{Ay:()=>a});var r=t(4848),i=t(8453);function d(e){const n={admonition:"admonition",p:"p",...(0,i.R)(),...e.components};return(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsx)(n.p,{children:"Please note that this content is under development and is not ready for implementation. This status message will be updated as content development progresses."})})}function a(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},9238:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var r=t(4848),i=t(8453),d=t(2056);const a={},l="Renderer Plugin",s={id:"vckit-plugins/renderer",title:"Renderer Plugin",description:"The Renderer Plugin is a module that provides rendering capabilities for verifiable credentials. It allows you to render verifiable credentials using different render methods, such as HTML templates.",source:"@site/docs/vckit-plugins/renderer.md",sourceDirName:"vckit-plugins",slug:"/vckit-plugins/renderer",permalink:"/project-vckit/docs/next/vckit-plugins/renderer",draft:!1,unlisted:!1,editUrl:"https://github.com/uncefact/project-vckit/tree/main/docs/vckit-plugins/renderer.md",tags:[],version:"current",frontMatter:{},sidebar:"getStartedSideBar",previous:{title:"Encrypted Storage",permalink:"/project-vckit/docs/next/vckit-plugins/encrypted-storage"},next:{title:"Revocation list 2020",permalink:"/project-vckit/docs/next/vckit-plugins/revocation-list-2020"}},o={},c=[{value:"Implement a Render Provider",id:"implement-a-render-provider",level:2},{value:"Usage",id:"usage",level:2},{value:"Standalone",id:"standalone",level:3},{value:"Verifiable credential data that uses the proof type &#39;lds&#39;",id:"verifiable-credential-data-that-uses-the-proof-type-lds",level:4},{value:"Verifiable credential data with EnvelopedVerifiableCredential",id:"verifiable-credential-data-with-envelopedverifiablecredential",level:4},{value:"With VCkit",id:"with-vckit",level:3},{value:"With VCkit Library",id:"with-vckit-library",level:3}];function p(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"renderer-plugin",children:"Renderer Plugin"}),"\n",(0,r.jsx)(d.Ay,{}),"\n",(0,r.jsx)(n.p,{children:"The Renderer Plugin is a module that provides rendering capabilities for verifiable credentials. It allows you to render verifiable credentials using different render methods, such as HTML templates."}),"\n",(0,r.jsx)(n.h2,{id:"implement-a-render-provider",children:"Implement a Render Provider"}),"\n",(0,r.jsx)(n.p,{children:"To implement a new render provider, follow these steps:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Implement the ",(0,r.jsx)(n.code,{children:"IRendererProvider"})," interface, which includes the ",(0,r.jsx)(n.code,{children:"renderCredential"})," method. This method takes two parameters: ",(0,r.jsx)(n.code,{children:"template"})," (a string containing the template to be rendered) and ",(0,r.jsx)(n.code,{children:"document"})," (a JSON object containing the data to be rendered). The method should return a string with the rendered document."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Save the provider file in the ",(0,r.jsx)(n.code,{children:"packages/renderer/src/providers"})," folder, using a name that corresponds to the render type. For example, if you want to implement a provider for ",(0,r.jsx)(n.code,{children:"WebRenderingTemplate2022"}),", name the provider file as ",(0,r.jsx)(n.code,{children:"web-rendering-template-2022.ts"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Add the provider to the agent.yml file, as shown in the following example:"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"renderer:\n  $require: '@uncefact/vckit-renderer#Renderer'\n  $args:\n    - defaultProvider: WebRenderingTemplate2022\n      providers:\n        WebRenderingTemplate2022:\n          $require: '@uncefact/vckit-renderer#WebRenderingTemplate2022'\n"})}),"\n",(0,r.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,r.jsx)(n.h3,{id:"standalone",children:"Standalone"}),"\n",(0,r.jsx)(n.h4,{id:"verifiable-credential-data-that-uses-the-proof-type-lds",children:"Verifiable credential data that uses the proof type 'lds'"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { WebRenderingTemplate2022 } from '@uncefact/vckit-renderer';\n\n// Example credential data\nconst params = {\n  credential: {\n    '@context': ['https://www.w3.org/ns/credentials/v2', 'https://www.w3.org/ns/credentials/examples/v2', 'https://dev-render-method-context.s3.ap-southeast-1.amazonaws.com/dev-render-method-context.json'],\n    id: 'http://example.gov/credentials/3732',\n    type: ['VerifiableCredential', 'ExampleDegreeCredential'],\n    issuer: 'did:example:6fb1f712ebe12c27cc26eebfe11',\n    validFrom: '2010-01-01T19:23:24Z',\n    credentialSubject: {\n      id: 'https://subject.example/subject/3921',\n      degree: {\n        type: 'ExampleBachelorDegree',\n        name: 'Bachelor of Science and Arts',\n      },\n    },\n    render: [\n      {\n        template: '<div>Template</div>',\n      },\n    ],\n    proof: {\n      type: 'DataIntegrityProof',\n      cryptosuite: 'eddsa-rdfc-2022',\n      created: '2021-11-13T18:19:39Z',\n      verificationMethod: 'did:web:example.com#key',\n      proofPurpose: 'assertionMethod',\n      proofValue: 'z58DAdFfa9SkqZMVPxAQp...jQCrfFPP2oumHKtz',\n    },\n  },\n};\n\nconst WebRenderingTemplate2022 = new WebRenderingTemplate2022();\nconst renderer = new Renderer({\n  providers: {\n    WebRenderingTemplate2022,\n  },\n  defaultProvider: 'WebRenderingTemplate2022',\n});\nconst context = {};\nconst result = await renderer.renderCredential(params, context);\n// The result will be the encoded base64 of the rendered HTML string.\n"})}),"\n",(0,r.jsx)(n.h4,{id:"verifiable-credential-data-with-envelopedverifiablecredential",children:"Verifiable credential data with EnvelopedVerifiableCredential"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { WebRenderingTemplate2022 } from '@uncefact/vckit-renderer';\n\nconst params = {\n  credential: {\n    '@context': ['https://www.w3.org/ns/credentials/v2', 'https://www.w3.org/ns/credentials/examples/v2'],\n    id: 'data:application/vc-ld+jwt,eyJhbGciOiJFZERTQSIsIm...', // The JWT should contain render field with the template.\n    type: 'EnvelopedVerifiableCredential',\n  },\n};\n\nconst WebRenderingTemplate2022 = new WebRenderingTemplate2022();\nconst renderer = new Renderer({\n  providers: {\n    WebRenderingTemplate2022,\n  },\n  defaultProvider: 'WebRenderingTemplate2022',\n});\nconst context = {};\nconst result = await renderer.renderCredential(params, context);\n// The result will be the encoded base64 of the rendered HTML string.\n"})}),"\n",(0,r.jsx)(n.h3,{id:"with-vckit",children:"With VCkit"}),"\n",(0,r.jsx)(n.p,{children:"Using the VCkit CLI or API"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Override the default configuration file to agent.yml."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Using CLI:"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"pnpm vckit execute -m renderCredential -f test.json\n# Provide the input JSON file, test.json, with the credential data.\n"})}),"\n",(0,r.jsxs)(n.ol,{start:"3",children:["\n",(0,r.jsx)(n.li,{children:"Using API:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"pnpm vckit server\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"curl -X 'POST' \\\n  'http://localhost:3332/agent/renderCredential' \\\n  -H 'accept: application/json; charset=utf-8' \\\n  -H 'Authorization: Bearer test123' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n  \"credential\": {\n    // Verifiable credential data...\n  }\n}'\n"})}),"\n",(0,r.jsx)(n.h3,{id:"with-vckit-library",children:"With VCkit Library"}),"\n",(0,r.jsx)(n.p,{children:"You can try VCkit Renderer plugin by follow this get started guide."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/docs/get-started/library-get-started/installation",children:"VCkit Library Get Started"}),"."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>l});var r=t(6540);const i={},d=r.createContext(i);function a(e){const n=r.useContext(d);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),r.createElement(d.Provider,{value:n},e.children)}}}]);